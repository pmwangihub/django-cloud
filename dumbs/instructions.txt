

ssh -i C:\DEV\SSH\droplet1 root@165.232.106.47

adduser mwangi 
usermod -aG sudo mwangi

ufw allow OpenSSH
ufw enable

sudo usermod -aG www-data mwangi
sudo usermod -aG www-data root


getent group www-data
groups mwangi


su - mwangi
sudo apt update &&
sudo apt upgrade -y
sudo apt install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx curl -y
sudo apt install  nginx  -y


pmwassini@gmail.com
CX544n8kA8hvs5ge62PIyH3

su mwangi

cd /home/mwangi/pminnovest && source env/bin/activate  &&  cd portfolio

git init && git remote add origin https://github.com/mwangihub/portfolio.git && \
git pull origin main 

python3 -m venv env

source env/bin/activate


nano .env

pip install -r requirements.txt --no-cache-dir

rav run migrate && rav run static && rav run user 

#/home/mwangi/django_cloud/backend/web/staticfiles

---------------------- PERMISSIONS ------------------------------

sudo chown -R :www-data /home/mwangi

sudo chmod -R 775 /home/mwangi

python manage.py collectstatic

----------------------  ------------------------------

sudo ufw allow 8000

python manage.py runserver 0.0.0.0:8000

http://165.232.106.47:8000/

gunicorn --bind 0.0.0.0:8000 web.app.asgi -w 4 -k uvicorn.workers.UvicornWorker

deactivate

xxxxxxxxxxxxxxxxxxxxxxxxxxxx Socket xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx


sudo nano /etc/systemd/system/django_cloud.socket
sudo rm /etc/systemd/system/django_cloud.socket


[Unit]
Description=Django cloud socket

[Socket]
ListenStream=/run/django_cloud.socket

[Install]
WantedBy=sockets.target

xxxxxxxxxxxxxxxxxxxxxxxxxxxx Socket xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

sudo rm /etc/systemd/system/django_cloud.service
sudo nano /etc/systemd/system/django_cloud.service



[Unit]
Description=Django Cloud daemon service
#Requires=django_cloud.socket
After=network.target

[Service]
User=mwangi
Group=www-data
WorkingDirectory=/home/mwangi/django_cloud/backend/web 
ExecStart=/home/mwangi/django_cloud/backend/env/bin/gunicorn --bind 0.0.0.0:8000 app.asgi:application -w 4 -k uvicorn.workers.UvicornWorker

[Install]
WantedBy=multi-user.target


sudo systemctl daemon-reload && \
sudo systemctl restart django_cloud.socket && \
sudo systemctl enable django_cloud.socket && \
sudo systemctl status django_cloud.socket

sudo systemctl stop django_cloud.socket

sudo systemctl daemon-reload && \
sudo systemctl restart django_cloud.service && \
sudo systemctl enable django_cloud.service && \
sudo systemctl status django_cloud.service


sudo systemctl stop django_cloud.service



date +"%Y-%m-%d %r"


------------------------------ NGINX ----------------------------




sudo systemctl stop nginx

sudo rm /etc/nginx/sites-available/django_cloud

sudo nano /etc/nginx/sites-available/django_cloud




************************* NGINX FILE ********************************************

server {

    listen 80;

    server_name www.django-app.pminnovest.com django-app.pminnovest.com;

    location = /favicon.ico { access_log off; log_not_found off; }

    location /static/ {
        alias /home/mwangi/django_cloud/backend/web/staticfiles/;
    }

    location /media/ {
        alias /home/mwangi/django_cloud/backend/web/media/;
    }


      location / {
        include proxy_params;
        proxy_pass http://127.0.0.1:8000;
    }

}

-------------------  ENCRYPT ----------------------------------------------

sudo apt install certbot python3-certbot-nginx -y


sudo certbot --nginx -d www.django-app.pminnovest.com -d django-app.pminnovest.com


sudo nano /etc/nginx/sites-enabled/default
sudo rm /etc/nginx/sites-enabled/default
sudo rm /etc/nginx/sites-available/default

sudo rm /etc/nginx/sites-enabled/django_cloud
sudo nano /etc/nginx/sites-enabled/django_cloud

sudo ln -s /etc/nginx/sites-available/django_cloud /etc/nginx/sites-enabled

sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled

sudo nginx -t && sudo systemctl restart nginx &&  sudo systemctl status nginx 

sudo ufw delete allow 8000  && \

sudo ufw allow 'Nginx Full'

sudo ufw status



sudo rm /var/log/nginx/error.log

sudo nano  /var/log/nginx/error.log

sudo tail -F /var/log/nginx/error.log


ps aux | grep nginx
sudo kill -9 999964
sudo kill -9 84559
sudo systemctl restart nginx






sudo rm /home/mwangi/log/access.log

sudo nano  /home/mwangi/log/access.log

sudo tail -F /home/mwangi/log/access.log






























---------------------------- CELERY BEAT SERVICE ----------------------------

sudo apt install redis-server

sudo systemctl restart redis-server

sudo systemctl status redis-server
sudo systemctl stop redis-server

redis-cli ping

sudo nano  /etc/systemd/system/celery_beat.service

# ---------------------------- CELERY BEAT SERVICE ----------------------------

[Unit]
Description=Celery Beat Service
After=network.target

[Service]
Type=simple
User=mwangi
Group=mwangi
WorkingDirectory=/home/mwangi/portfolio
ExecStart=/home/mwangi/env/bin/celery -A src beat --loglevel=info
Restart=always

[Install]
WantedBy=multi-user.target


# ---------------------------- CELERY BEAT SERVICE ----------------------------

sudo systemctl stop celery_beat

sudo systemctl daemon-reload &&
sudo systemctl enable celery_beat &&
sudo systemctl start celery_beat &&
sudo systemctl status celery_beat


sudo journalctl -u celery_beat










---------------------------- CELERY  ----------------------------



sudo nano  /etc/systemd/system/celery_service.service

# ---------------------------- CELERY ----------------------------

[Unit]
Description=Celery Beat Service
After=network.target

[Service]
Type=simple
User=mwangi
Group=mwangi
WorkingDirectory=/home/mwangi/portfolio
ExecStart=/home/mwangi/env/bin/celery -A src worker --loglevel=info --pool=solo
Restart=always

[Install]
WantedBy=multi-user.target


# ---------------------------- CELERY BEAT SERVICE ----------------------------

sudo systemctl stop celery_service

sudo systemctl daemon-reload &&
sudo systemctl enable celery_service &&
sudo systemctl start celery_service &&
sudo systemctl status celery_service

sudo journalctl -u celery_service









    location /static/ {
        alias /home/mwangi/pminnovest/app/static/;
    }

    location /media/ {
        alias /home/mwangi/pminnovest/app/media/;
    }




django_cloud/
├── backend/
│   ├── env/
│   ├── web/
│   ├── __init__.py
│   │   ├── app/
│   │   │   ├── __init__.py
│   │   │   ├── asgi.py
│   │   │   ├── settings.py
│   │   │   ├── urls.py
│   │   │   ├── wsgi.py
│   ├── manage.py